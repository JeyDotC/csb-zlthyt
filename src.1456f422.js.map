{"version":3,"sources":["src/lib.js","src/htmlToJustCs.js","src/index.js"],"names":["stateUnit","initialState","current","listeners","newValue","forEach","listener","newListener","push","upperCaseFirst","str","toUpperCase","slice","spacingTextExpression","knownBooleanAttrs","processAttribute","nodeName","nodeValue","firstIndexOfDash","indexOf","attributeName","replaceAll","stringValue","includes","printTag","node","depth","tabs","repeat","nodeType","wholeText","test","tagName","attributes","childNodes","allAttributes","regularAttributes","filter","map","ariaAttributes","startsWith","join","dataAttributes","attrs","length","children","child","entry","selfClosed","toLowerCase","htmlToJustCs","htmlString","DOMParser","parseFromString","body","getSourceHtml","setSourceHtml","onSourceHtmlChange","getTargetJustCs","setTargetJustCs","onTargetJustCsChange","sourceHtml","document","getElementById","convertButton","targetJustCs","querySelector","copyToClipboardButton","clearButton","addEventListener","e","target","value","clipboardData","navigator","clipboard","writeText","setAttribute","removeAttribute","innerText"],"mappings":"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","file":"src.1456f422.js","sourceRoot":"..","sourcesContent":["export function stateUnit(initialState) {\n  let current = initialState;\n  const listeners = [];\n\n  return [\n    () => current,\n    (newValue) => {\n      listeners.forEach((listener) => listener(newValue, current));\n      current = newValue;\n    },\n    (newListener) => listeners.push(newListener)\n  ];\n}\n\nexport function upperCaseFirst(str) {\n  return `${str[0].toUpperCase()}${str.slice(1)}`;\n}\n","import { upperCaseFirst } from \"./lib\";\n\nconst spacingTextExpression = /^\\n( |\\t)*$/;\n\nconst knownBooleanAttrs = [\n  \"Async\",\n  \"Autofocus\",\n  \"Autoplay\",\n  \"Checked\",\n  \"Contenteditable\",\n  \"Controls\",\n  \"Default\",\n  \"Defer\",\n  \"Disabled\",\n  \"Download\",\n  \"Hidden\",\n  \"Ismap\",\n  \"Loop\",\n  \"Multiple\",\n  \"Muted\",\n  \"Novalidate\",\n  \"Open\",\n  \"Readonly\",\n  \"Required\",\n  \"Reversed\",\n  \"Sandbox\",\n  \"Selected\"\n];\n\nfunction processAttribute({ nodeName, nodeValue }) {\n  const firstIndexOfDash = nodeName.indexOf(\"-\");\n  const attributeName = upperCaseFirst(\n    nodeName.slice(firstIndexOfDash + 1).replaceAll(\"-\", \"\")\n  );\n  const isBoolean = knownBooleanAttrs.includes(attributeName);\n  const stringValue = isBoolean ? \"true\" : `\"${nodeValue}\"`;\n  return `${attributeName} = ${stringValue}`;\n}\n\nfunction printTag(node, depth = 0) {\n  const tabs = `\\n${\" \".repeat(depth * 2)}`;\n\n  if (node.nodeType === 3) {\n    const { wholeText } = node;\n    const isFormattingText = spacingTextExpression.test(wholeText);\n    return isFormattingText ? \"\" : `${tabs}@\"${wholeText}\"`;\n  }\n\n  const { tagName, attributes, childNodes } = node;\n\n  const allAttributes = [...attributes];\n\n  const regularAttributes = allAttributes\n    .filter(({ nodeName }) => !nodeName.includes(\"-\"))\n    .map(processAttribute);\n\n  const ariaAttributes = allAttributes\n    .filter(({ nodeName }) => nodeName.startsWith(\"aria-\"))\n    .map(processAttribute)\n    .join(\", \");\n\n  const dataAttributes = allAttributes\n    .filter(({ nodeName }) => nodeName.startsWith(\"data-\"))\n    .map(processAttribute)\n    .join(\", \");\n\n  const attrs = [\n    ...regularAttributes,\n    ...(ariaAttributes.length > 0\n      ? [`Aria = new AriaAttrs { ${ariaAttributes} }`]\n      : []),\n    ...(dataAttributes.length > 0\n      ? [`DataSet = new { ${dataAttributes} }`]\n      : [])\n  ].join(\", \");\n\n  const children = [...childNodes]\n    .map((child) => printTag(child, depth + 1))\n    .filter((entry) => entry.length > 0)\n    .join(\",\");\n\n  const selfClosed = children.length === 0;\n\n  return `${tabs}_<${tagName[0]}${tagName\n    .slice(1)\n    .toLowerCase()}>(new Attrs{ ${attrs} }${selfClosed ? \"\" : \",\"}${children}${\n    selfClosed ? \"\" : tabs\n  })`;\n}\n\nexport function htmlToJustCs(htmlString) {\n  const doc = new DOMParser().parseFromString(htmlString, \"text/html\");\n  return [...doc.body.childNodes].map(printTag).join(\"\\n\");\n}\n","import \"./styles.css\";\nimport { stateUnit } from \"./lib\";\nimport { htmlToJustCs } from \"./htmlToJustCs\";\n\n// State Units\nconst [getSourceHtml, setSourceHtml, onSourceHtmlChange] = stateUnit(\"\");\nconst [getTargetJustCs, setTargetJustCs, onTargetJustCsChange] = stateUnit(\"\");\n\n// Elements\nconst sourceHtml = document.getElementById(\"sourceHtml\");\nconst convertButton = document.getElementById(\"convertButton\");\nconst targetJustCs = document\n  .getElementById(\"targetJustCs\")\n  .querySelector(\"code\");\nconst copyToClipboardButton = document.getElementById(\"copyToClipboardButton\");\nconst clearButton = document.getElementById(\"clearButton\");\n\n// DOM event Listeners\nsourceHtml.addEventListener(\"change\", (e) => setSourceHtml(e.target.value));\nsourceHtml.addEventListener(\"paste\", (e) => setSourceHtml(e.clipboardData));\nconvertButton.addEventListener(\"click\", () =>\n  setTargetJustCs(htmlToJustCs(getSourceHtml()))\n);\ncopyToClipboardButton.addEventListener(\"click\", () =>\n  navigator.clipboard.writeText(getTargetJustCs())\n);\nclearButton.addEventListener(\"click\", () => {\n  sourceHtml.value = \"\";\n  setSourceHtml(\"\");\n  setTargetJustCs(\"\");\n});\n\n// State Event Listeners\nonSourceHtmlChange((newValue) =>\n  newValue.length === 0\n    ? convertButton.setAttribute(\"disabled\", true)\n    : convertButton.removeAttribute(\"disabled\")\n);\nonTargetJustCsChange((newValue) => {\n  targetJustCs.innerText = newValue;\n  if (newValue.length === 0) {\n    copyToClipboardButton.setAttribute(\"disabled\", true);\n  } else {\n    copyToClipboardButton.removeAttribute(\"disabled\");\n  }\n});\n"]}